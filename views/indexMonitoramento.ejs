<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monitoramento da Qualidade do Ar</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        #btn-voltar {
            position: fixed;
            left: 20px;
            top: 20px;
            z-index: 1000;
        }

        .grafico-container {
            width: 100%;
            max-width: 900px;
            height: 500px;
            margin: auto;
        }
    </style>
</head>
<body class="container mt-4">
    <!-- Incluir VLibras automaticamente -->
    <%- vlibras %>

    <button id="btn-voltar" class="btn btn-danger" onclick="window.history.back()">Voltar</button>

    <h2 class="text-center">Monitoramento da Qualidade do Ar</h2>

    <!-- Formulário para Adicionar Sala -->
    <div class="card p-3 mt-4">
        <h4>Adicionar Sala</h4>
        <form action="/salas" method="POST">
            <input type="text" name="nome" class="form-control mb-2" placeholder="Nome da Sala" required>
            <button type="submit" class="btn btn-primary">Cadastrar Sala</button>
        </form>
    </div>

    <!-- Formulário para Adicionar Sensor -->
    <div class="card p-3 mt-4">
        <h4>Adicionar Sensor</h4>
        <form action="/sensores" method="POST">
            <input type="text" name="descricao" class="form-control mb-2" placeholder="Descrição do Sensor" required>
            <button type="submit" class="btn btn-primary">Cadastrar Sensor</button>
        </form>
    </div>

    <!-- Formulário para Registrar Qualidade do Ar -->
    <div class="card p-3 mt-4">
        <h4>Registrar Medição</h4>
        <form action="/monitoramento" method="POST">
            <select name="sala_id" class="form-control mb-2" required>
                <option value="">Selecione a Sala</option>
                <% salas.forEach(sala => { %>
                    <option value="<%= sala.id %>"><%= sala.nome %></option>
                <% }); %>
            </select>

            <select name="sensor_id" class="form-control mb-2" required>
                <option value="">Selecione o Sensor</option>
                <% sensores.forEach(sensor => { %>
                    <option value="<%= sensor.id %>"><%= sensor.descricao %></option>
                <% }); %>
            </select>

            <input type="number" name="qualidade_ar" class="form-control mb-2" placeholder="Índice de Qualidade do Ar (0-100)" required>
            <button type="submit" class="btn btn-success">Registrar Medição</button>
        </form>
    </div>

    <!-- Tabela de Monitoramento -->
    <div class="card p-3 mt-4">
        <h4>Últimos Registros</h4>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Sala</th>
                    <th>Sensor</th>
                    <th>Qualidade do Ar</th>
                    <th>Data e Hora</th>
                </tr>
            </thead>
            <tbody id="tabela-dados">
                <!-- Os dados serão preenchidos aqui -->
            </tbody>
        </table>
    </div>
    <script>
        async function carregarDados() {
            try {
                const decimo = await fetch('/monitoramento/excluiMaiorqueDez'); // Chama a API
                const resposta = await fetch('/monitoramento/dados'); // Chama a API
                const dados = await resposta.json();
            
                let tabela = document.getElementById("tabela-dados");
                tabela.innerHTML = ""; // Limpa antes de adicionar novos registros
            
                dados.forEach(registro => {
                    let linha = `
                        <tr>
                            <td>${registro.sala_nome}</td>
                            <td>${registro.sensor_desc}</td>
                            <td>${registro.qualidade_ar}</td>
                            <td>${new Date(registro.data_hora).toLocaleString()}</td>
                        </tr>
                    `;
                    tabela.innerHTML += linha;
                });
            } catch (erro) {
                console.error("Erro ao carregar os dados:", erro);
            }
        }
        
        carregarDados(); // Chama a função ao carregar a página
    </script>
<!-- Gráficos de Relatórios -->
<div class="card p-3 mt-4">
    <h4>Gráficos de Monitoramento</h4>
    <div class="grafico-container">
        <canvas id="graficoLinha"></canvas>
    </div>
    <div class="grafico-container mt-4">
        <canvas id="graficoBarra"></canvas>
    </div>
<!---
    <div class="grafico-container mt-4">
        <canvas id="graficoPizza"></canvas>
    </div>
-->
<div style="display: flex; justify-content: center;">
    <canvas id="graficoPizza" style="max-width: 550px; max-height: 550px;"></canvas>
</div>

</div>

<script>
    async function carregarGraficos() {
        const decimo = await fetch('/monitoramento/excluiMaiorqueDez'); // Chama a API
        const resposta = await fetch('/monitoramento/dados');
        const dados = await resposta.json();

        const labels = dados.map(d => new Date(d.data_hora).toLocaleTimeString());
        const valores = dados.map(d => d.qualidade_ar);

        const ctxLinha = document.getElementById('graficoLinha').getContext('2d');
        new Chart(ctxLinha, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Qualidade do Ar',
                    data: valores,
                    borderColor: 'blue',
                    borderWidth: 2,
                    fill: false
                }]
            }
        });

        const ctxBarra = document.getElementById('graficoBarra').getContext('2d');
        new Chart(ctxBarra, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Qualidade do Ar',
                    data: valores,
                    backgroundColor: 'mediumseagreen'
                }]
            }
        });

        const ctxPizza = document.getElementById('graficoPizza').getContext('2d');
        new Chart(ctxPizza, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Qualidade do Ar',
                    data: valores,
                    backgroundColor: ['red', 'orange', 'yellow', 'green', 'blue', '#FF7F7F', '#800080', '#FFFF99', '#90EE90', '#87CEFA']
                }]
            }
        });
    }

    carregarGraficos(); // Chama a função ao carregar a página
</script>

</body>
</html>
